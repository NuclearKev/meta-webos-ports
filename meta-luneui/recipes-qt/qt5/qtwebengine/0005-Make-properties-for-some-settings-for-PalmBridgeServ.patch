From f64992ced7a2e0ab4bd85e210614b3614d3b4bc8 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Wed, 30 Sep 2015 23:37:44 +0200
Subject: [PATCH] Make properties for some settings for PalmBridgeService
 management

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 src/core/web_engine_settings.cpp              | 19 ++++++++++
 src/core/web_engine_settings.h                |  6 +++
 src/webengine/api/qquickwebenginesettings.cpp | 38 +++++++++++++++++++
 src/webengine/api/qquickwebenginesettings_p.h | 12 ++++++
 4 files changed, 75 insertions(+)

diff --git a/src/core/web_engine_settings.cpp b/src/core/web_engine_settings.cpp
index 4cd4b645..191eaa6f 100644
--- a/src/core/web_engine_settings.cpp
+++ b/src/core/web_engine_settings.cpp
@@ -251,6 +251,19 @@ WebEngineSettings::UnknownUrlSchemePolicy WebEngineSettings::unknownUrlSchemePol
     return AllowUnknownUrlSchemesFromUserInteraction;
 }
 
+void WebEngineSettings::setLuneOSIdentifier(const QString &identifier)
+{
+    m_luneOSIdentifier = identifier;
+    scheduleApplyRecursively();
+}
+
+QString WebEngineSettings::luneOSIdentifier() const
+{
+    if (!parentSettings)
+        return m_luneOSIdentifier;
+    return m_luneOSIdentifier.isEmpty()? parentSettings->luneOSIdentifier() : m_luneOSIdentifier;
+}
+
 void WebEngineSettings::initDefaults()
 {
     if (s_defaultAttributes.isEmpty()) {
@@ -298,6 +311,8 @@ void WebEngineSettings::initDefaults()
         s_defaultAttributes.insert(PlaybackRequiresUserGesture, playbackRequiresUserGesture);
         s_defaultAttributes.insert(WebRTCPublicInterfacesOnly, false);
         s_defaultAttributes.insert(JavascriptCanPaste, false);
+        s_defaultAttributes.insert(PalmServiceBridgeEnabled, false);
+        s_defaultAttributes.insert(LuneOSPrivileged, false);
     }
 
     if (s_defaultFontFamilies.isEmpty()) {
@@ -328,6 +343,8 @@ void WebEngineSettings::initDefaults()
         s_defaultFontSizes.insert(DefaultFontSize, 16);
     }
 
+    m_luneOSIdentifier = "";
+
     m_defaultEncoding = QStringLiteral("ISO-8859-1");
     m_unknownUrlSchemePolicy = InheritedUnknownUrlSchemePolicy;
 }
@@ -390,6 +407,8 @@ void WebEngineSettings::applySettingsToWebPreferences(content::WebPreferences *p
                                : content::AutoplayPolicy::kNoUserGestureRequired;
     }
     prefs->dom_paste_enabled = testAttribute(JavascriptCanPaste);
+    prefs->luneosPriviledged = testAttribute(LuneOSPrivileged);
+    prefs->luneosAppIdentifier = luneOSIdentifier().toStdString();
 
     // Fonts settings.
     prefs->standard_font_family_map[content::kCommonScript] = toString16(fontFamily(StandardFont));
diff --git a/src/core/web_engine_settings.h b/src/core/web_engine_settings.h
index eba9bf7e..1042bdee 100644
--- a/src/core/web_engine_settings.h
+++ b/src/core/web_engine_settings.h
@@ -91,6 +91,8 @@ public:
         PlaybackRequiresUserGesture,
         WebRTCPublicInterfacesOnly,
         JavascriptCanPaste,
+        PalmServiceBridgeEnabled,
+        LuneOSPrivileged
     };
 
     // Must match the values from the public API in qwebenginesettings.h.
@@ -146,6 +148,9 @@ public:
     void setUnknownUrlSchemePolicy(UnknownUrlSchemePolicy policy);
     UnknownUrlSchemePolicy unknownUrlSchemePolicy() const;
 
+    void setLuneOSIdentifier(const QString &identifier);
+    QString luneOSIdentifier() const;
+
     void initDefaults();
     void scheduleApply();
 
@@ -164,6 +169,7 @@ private:
     QHash<FontFamily, QString> m_fontFamilies;
     QHash<FontSize, int> m_fontSizes;
     QString m_defaultEncoding;
+    QString m_luneOSIdentifier;
     QScopedPointer<content::WebPreferences> webPreferences;
     QScopedPointer<BatchTimer> m_batchTimer;
 
diff --git a/src/webengine/api/qquickwebenginesettings.cpp b/src/webengine/api/qquickwebenginesettings.cpp
index 6203f20f..7e77f474 100644
--- a/src/webengine/api/qquickwebenginesettings.cpp
+++ b/src/webengine/api/qquickwebenginesettings.cpp
@@ -472,6 +472,21 @@ QQuickWebEngineSettings::UnknownUrlSchemePolicy QQuickWebEngineSettings::unknown
     return static_cast<QQuickWebEngineSettings::UnknownUrlSchemePolicy>(d_ptr->unknownUrlSchemePolicy());
 }
 
+bool QQuickWebEngineSettings::palmServiceBridgeEnabled() const
+{
+    return d_ptr->testAttribute(WebEngineSettings::PalmServiceBridgeEnabled);
+}
+
+bool QQuickWebEngineSettings::luneOSPrivileged() const
+{
+    return d_ptr->testAttribute(WebEngineSettings::LuneOSPrivileged);
+}
+
+QString QQuickWebEngineSettings::luneOSIdentifier() const
+{
+    return d_ptr->luneOSIdentifier();
+}
+
 void QQuickWebEngineSettings::setAutoLoadImages(bool on)
 {
     bool wasOn = d_ptr->testAttribute(WebEngineSettings::AutoLoadImages);
@@ -675,6 +690,29 @@ void QQuickWebEngineSettings::setShowScrollBars(bool on)
     if (wasOn != on)
         Q_EMIT showScrollBarsChanged();
 }
+void QQuickWebEngineSettings::setPalmServiceBridgeEnabled(bool on)
+{
+    bool wasOn = d_ptr->testAttribute(WebEngineSettings::PalmServiceBridgeEnabled);
+    d_ptr->setAttribute(WebEngineSettings::PalmServiceBridgeEnabled, on);
+    if (wasOn != on)
+        Q_EMIT palmServiceBridgeEnabledChanged();
+}
+
+void QQuickWebEngineSettings::setLuneOSPrivileged(bool on)
+{
+    bool wasOn = d_ptr->testAttribute(WebEngineSettings::LuneOSPrivileged);
+    d_ptr->setAttribute(WebEngineSettings::LuneOSPrivileged, on);
+    if (wasOn != on)
+        Q_EMIT luneOSPrivilegedChanged();
+}
+
+void QQuickWebEngineSettings::setLuneOSIdentifier(QString identifier)
+{
+    const QString oldLuneOSIdentifier = d_ptr->luneOSIdentifier();
+    d_ptr->setLuneOSIdentifier(identifier);
+    if (oldLuneOSIdentifier.compare(identifier))
+        Q_EMIT luneOSIdentifierChanged();
+}
 
 void QQuickWebEngineSettings::setPlaybackRequiresUserGesture(bool on)
 {
diff --git a/src/webengine/api/qquickwebenginesettings_p.h b/src/webengine/api/qquickwebenginesettings_p.h
index 26776794..34d133da 100644
--- a/src/webengine/api/qquickwebenginesettings_p.h
+++ b/src/webengine/api/qquickwebenginesettings_p.h
@@ -92,6 +92,9 @@ class Q_WEBENGINE_PRIVATE_EXPORT QQuickWebEngineSettings : public QObject {
     Q_PROPERTY(bool playbackRequiresUserGesture READ playbackRequiresUserGesture WRITE setPlaybackRequiresUserGesture NOTIFY playbackRequiresUserGestureChanged REVISION 6 FINAL)
     Q_PROPERTY(bool webRTCPublicInterfacesOnly READ webRTCPublicInterfacesOnly WRITE setWebRTCPublicInterfacesOnly NOTIFY webRTCPublicInterfacesOnlyChanged REVISION 6 FINAL)
     Q_PROPERTY(bool javascriptCanPaste READ javascriptCanPaste WRITE setJavascriptCanPaste NOTIFY javascriptCanPasteChanged REVISION 6 FINAL)
+    Q_PROPERTY(bool palmServiceBridgeEnabled READ palmServiceBridgeEnabled WRITE setPalmServiceBridgeEnabled NOTIFY palmServiceBridgeEnabledChanged)
+    Q_PROPERTY(bool luneOSPrivileged READ luneOSPrivileged WRITE setLuneOSPrivileged NOTIFY luneOSPrivilegedChanged)
+    Q_PROPERTY(QString luneOSIdentifier READ luneOSIdentifier WRITE setLuneOSIdentifier NOTIFY luneOSIdentifierChanged)
 
 public:
     enum UnknownUrlSchemePolicy {
@@ -133,6 +136,9 @@ public:
     bool playbackRequiresUserGesture() const;
     bool webRTCPublicInterfacesOnly() const;
     bool javascriptCanPaste() const;
+    bool palmServiceBridgeEnabled() const;
+    bool luneOSPrivileged() const;
+    QString luneOSIdentifier() const;
 
     void setAutoLoadImages(bool on);
     void setJavascriptEnabled(bool on);
@@ -163,6 +169,9 @@ public:
     void setPlaybackRequiresUserGesture(bool on);
     void setWebRTCPublicInterfacesOnly(bool on);
     void setJavascriptCanPaste(bool on);
+    void setPalmServiceBridgeEnabled(bool on);
+    void setLuneOSPrivileged(bool on);
+    void setLuneOSIdentifier(QString identifier);
 
 signals:
     void autoLoadImagesChanged();
@@ -194,6 +203,9 @@ signals:
     Q_REVISION(6) void playbackRequiresUserGestureChanged();
     Q_REVISION(6) void webRTCPublicInterfacesOnlyChanged();
     Q_REVISION(6) void javascriptCanPasteChanged();
+    void palmServiceBridgeEnabledChanged();
+    void luneOSPrivilegedChanged();
+    void luneOSIdentifierChanged();
 
 private:
     explicit QQuickWebEngineSettings(QQuickWebEngineSettings *parentSettings = 0);
