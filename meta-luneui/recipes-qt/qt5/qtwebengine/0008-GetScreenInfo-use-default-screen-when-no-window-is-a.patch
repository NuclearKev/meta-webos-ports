From 1c555bcba56e27a169223f7cb2fbb639795e126c Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sat, 31 Oct 2015 16:04:01 +0100
Subject: [PATCH] GetScreenInfo: use default screen when no window is available

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 src/core/render_widget_host_view_qt.cpp   | 10 ++++++++++
 src/webengine/api/qquickwebengineview.cpp |  2 +-
 2 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/src/core/render_widget_host_view_qt.cpp b/src/core/render_widget_host_view_qt.cpp
index 3be0c939..cc334ebd 100644
--- a/src/core/render_widget_host_view_qt.cpp
+++ b/src/core/render_widget_host_view_qt.cpp
@@ -42,6 +42,7 @@
 #include "browser_accessibility_manager_qt.h"
 #include "common/qt_messages.h"
 #include "compositor/compositor.h"
+#include "web_contents_view_qt.h"
 #include "qtwebenginecoreglobal_p.h"
 #include "render_widget_host_view_qt_delegate.h"
 #include "touch_handle_drawable_client.h"
@@ -942,7 +943,16 @@ void RenderWidgetHostViewQt::visualPropertiesChanged()
     gfx::Rect oldWindowRect = m_windowRectInDips;
     m_windowRectInDips = toGfx(m_delegate->windowGeometry());
 
+/*  TODO
     QWindow *window = m_delegate->window();
+    if( window ) {
+        GetScreenInfoFromNativeWindow(window, results);
+    }
+    else {
+        content::WebContentsView::GetDefaultScreenInfo(results);
+    }
+*/
+
     content::ScreenInfo oldScreenInfo = m_screenInfo;
     m_screenInfo = screenInfoFromQScreen(window ? window->screen() : nullptr);
 
diff --git a/src/webengine/api/qquickwebengineview.cpp b/src/webengine/api/qquickwebengineview.cpp
index 751f44f3..9f9b6095 100644
--- a/src/webengine/api/qquickwebengineview.cpp
+++ b/src/webengine/api/qquickwebengineview.cpp
@@ -523,7 +523,7 @@ void QQuickWebEngineViewPrivate::unhandledKeyEvent(QKeyEvent *event)
         QCoreApplication::sendEvent(q->parentItem(), event);
 }
 
-void QQuickWebEngineViewPrivate::adoptNewWindow(QSharedPointer<WebContentsAdapter> newWebContents, WindowOpenDisposition disposition, bool userGesture, const QRect &requestedGeometry, const QStringList &additionalFeaturesStringList)
+void QQuickWebEngineViewPrivate::adoptNewWindow(QSharedPointer<WebContentsAdapter> newWebContents, WindowOpenDisposition disposition, bool userGesture, const QRect &requestedGeometry, const QUrl &targetUrl, const QStringList &additionalFeaturesStringList)
 {
     Q_Q(QQuickWebEngineView);
     QQuickWebEngineNewViewRequest request;
