From 7ab6691e920001a8f43fe529d7e5149ed5d870ad Mon Sep 17 00:00:00 2001
From: Herrie <github.com@herrie.org>
Date: Fri, 25 Aug 2017 21:12:16 +0200
Subject: [PATCH 09/10] Update additional params from Chromium 53->56

---
 chromium/content/browser/web_contents/web_contents_impl.cc   | 8 ++++++--
 chromium/content/public/common/common_param_traits_macros.h  | 1 +
 chromium/third_party/WebKit/public/web/WebWindowFeatures.h   | 2 ++
 chromium/third_party/WebKit/public/web/window_features.mojom | 6 ++++++
 4 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/chromium/content/browser/web_contents/web_contents_impl.cc b/chromium/content/browser/web_contents/web_contents_impl.cc
index 7d24718..26c6576 100644
--- a/chromium/content/browser/web_contents/web_contents_impl.cc
+++ b/chromium/content/browser/web_contents/web_contents_impl.cc
@@ -2267,6 +2267,10 @@ void WebContentsImpl::CreateNewWindow(
     }
     return;
   }
+  
+  std::vector<base::string16> additional_features;
+  for (auto webStr : params.features.additionalFeatures)
+    additional_features.push_back(webStr);
 
   // Create the new web contents. This will automatically create the new
   // WebContentsView. In the future, we may want to create the view separately.
@@ -2311,7 +2315,7 @@ void WebContentsImpl::CreateNewWindow(
 
       // set the additional features required by the LuneOS app
       // (ideally this information should be propagated using the IPC messaging)
-      new_view->setWindowAdditionalFeatures(params.additional_features);
+      new_view->setWindowAdditionalFeatures(additional_features);
       new_view->setInitialTargetURL(params.target_url);
 
       // TODO(brettw): It seems bogus that we have to call this function on the
@@ -2359,7 +2363,7 @@ void WebContentsImpl::CreateNewWindow(
 
       delegate_->AddNewContents(
           this, new_contents, params.disposition, initial_rect,
-          params.user_gesture, &was_blocked, params.additional_features);
+          params.user_gesture, &was_blocked, additional_features);
 
       if (!weak_new_contents)
         return;  // The delegate deleted |new_contents| during AddNewContents().
diff --git a/chromium/content/public/common/common_param_traits_macros.h b/chromium/content/public/common/common_param_traits_macros.h
index 78688d9..a1e0134 100644
--- a/chromium/content/public/common/common_param_traits_macros.h
+++ b/chromium/content/public/common/common_param_traits_macros.h
@@ -274,6 +274,7 @@ IPC_STRUCT_TRAITS_BEGIN(blink::mojom::WindowFeatures)
   IPC_STRUCT_TRAITS_MEMBER(status_bar_visible)
   IPC_STRUCT_TRAITS_MEMBER(tool_bar_visible)
   IPC_STRUCT_TRAITS_MEMBER(scrollbars_visible)
+  IPC_STRUCT_TRAITS_MEMBER(additionalFeatures)
 IPC_STRUCT_TRAITS_END()
 
 IPC_ENUM_TRAITS_MAX_VALUE(ui::AXEvent, ui::AX_EVENT_LAST)
diff --git a/chromium/third_party/WebKit/public/web/WebWindowFeatures.h b/chromium/third_party/WebKit/public/web/WebWindowFeatures.h
index cf213a9..e97ebba 100644
--- a/chromium/third_party/WebKit/public/web/WebWindowFeatures.h
+++ b/chromium/third_party/WebKit/public/web/WebWindowFeatures.h
@@ -54,6 +54,8 @@ struct WebWindowFeatures {
   bool noopener = false;
   bool background = false;
   bool persistent = false;
+  
+  std::vector<base::string16> additionalFeatures;
 };
 
 }  // namespace blink
diff --git a/chromium/third_party/WebKit/public/web/window_features.mojom b/chromium/third_party/WebKit/public/web/window_features.mojom
index dac13c3..2ecfbd0 100644
--- a/chromium/third_party/WebKit/public/web/window_features.mojom
+++ b/chromium/third_party/WebKit/public/web/window_features.mojom
@@ -21,4 +21,10 @@ struct WindowFeatures {
     bool status_bar_visible = true;
     bool tool_bar_visible = true;
     bool scrollbars_visible = true;
+
+    // NOTE: WebWindowFeatures::additionalFeatures is not mirrored by this
+    // mojom struct as it's never used by the browser and therefore doesn't need
+    // to be sent.
+	// ... but webOS/LuneOS apps need that to send additional info to the OS
+    array<string> additionalFeatures;
 };
-- 
2.7.4

