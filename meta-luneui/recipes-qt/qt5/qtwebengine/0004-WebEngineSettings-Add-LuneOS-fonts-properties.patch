From cdc13d99a58c6b3850a31b8b9781557bec406c17 Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Sat, 17 Oct 2015 21:09:29 +0200
Subject: [PATCH] WebEngineSettings: Add LuneOS fonts properties

 * Add a "standardFontFamily" property to be able to setup Prelude
 * Add also Serif, Fixed and Cursive font settings, and font size for normal and fixed fonts.

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 src/webengine/api/qquickwebenginesettings.cpp | 73 +++++++++++++++++++
 src/webengine/api/qquickwebenginesettings_p.h | 24 ++++++
 2 files changed, 97 insertions(+)

diff --git a/src/webengine/api/qquickwebenginesettings.cpp b/src/webengine/api/qquickwebenginesettings.cpp
index 6203f20f..6ec2ba96 100644
--- a/src/webengine/api/qquickwebenginesettings.cpp
+++ b/src/webengine/api/qquickwebenginesettings.cpp
@@ -472,6 +472,31 @@ QQuickWebEngineSettings::UnknownUrlSchemePolicy QQuickWebEngineSettings::unknown
     return static_cast<QQuickWebEngineSettings::UnknownUrlSchemePolicy>(d_ptr->unknownUrlSchemePolicy());
 }
 
+QString QQuickWebEngineSettings::standardFontFamily() const
+{
+    return d_ptr->fontFamily(WebEngineSettings::StandardFont);
+}
+QString QQuickWebEngineSettings::fixedFontFamily() const
+{
+    return d_ptr->fontFamily(WebEngineSettings::FixedFont);
+}
+QString QQuickWebEngineSettings::serifFontFamily() const
+{
+    return d_ptr->fontFamily(WebEngineSettings::SerifFont);
+}
+QString QQuickWebEngineSettings::cursiveFontFamily() const
+{
+    return d_ptr->fontFamily(WebEngineSettings::CursiveFont);
+}
+int QQuickWebEngineSettings::defaultFontSize() const
+{
+    return d_ptr->fontSize(WebEngineSettings::DefaultFontSize);
+}
+int QQuickWebEngineSettings::defaultFixedFontSize() const
+{
+    return d_ptr->fontSize(WebEngineSettings::DefaultFixedFontSize);
+}
+
 void QQuickWebEngineSettings::setAutoLoadImages(bool on)
 {
     bool wasOn = d_ptr->testAttribute(WebEngineSettings::AutoLoadImages);
@@ -709,6 +734,54 @@ void QQuickWebEngineSettings::setWebRTCPublicInterfacesOnly(bool on)
         Q_EMIT webRTCPublicInterfacesOnlyChanged();
 }
 
+void QQuickWebEngineSettings::setStandardFontFamily(QString fontFamily)
+{
+    const QString oldStandardFontFamily = d_ptr->fontFamily(WebEngineSettings::StandardFont);
+    d_ptr->setFontFamily(WebEngineSettings::StandardFont, fontFamily);
+    if (oldStandardFontFamily.compare(fontFamily))
+        Q_EMIT standardFontFamilyChanged();
+}
+
+void QQuickWebEngineSettings::setFixedFontFamily(QString fontFamily)
+{
+    const QString oldFixedFontFamily = d_ptr->fontFamily(WebEngineSettings::FixedFont);
+    d_ptr->setFontFamily(WebEngineSettings::FixedFont, fontFamily);
+    if (oldFixedFontFamily.compare(fontFamily))
+        Q_EMIT fixedFontFamilyChanged();
+}
+
+void QQuickWebEngineSettings::setSerifFontFamily(QString fontFamily)
+{
+    const QString oldSerifFontFamily = d_ptr->fontFamily(WebEngineSettings::SerifFont);
+    d_ptr->setFontFamily(WebEngineSettings::SerifFont, fontFamily);
+    if (oldSerifFontFamily.compare(fontFamily))
+        Q_EMIT serifFontFamilyChanged();
+}
+
+void QQuickWebEngineSettings::setCursiveFontFamily(QString fontFamily)
+{
+    const QString oldCursiveFontFamily = d_ptr->fontFamily(WebEngineSettings::CursiveFont);
+    d_ptr->setFontFamily(WebEngineSettings::CursiveFont, fontFamily);
+    if (oldCursiveFontFamily.compare(fontFamily))
+        Q_EMIT standardFontFamilyChanged();
+}
+
+void QQuickWebEngineSettings::setDefaultFontSize(int fontSize)
+{
+    const int oldDefaultFontSize = d_ptr->fontSize(WebEngineSettings::DefaultFontSize);
+    d_ptr->setFontSize(WebEngineSettings::DefaultFontSize, fontSize);
+    if (oldDefaultFontSize!= fontSize)
+        Q_EMIT defaultFontSizeChanged();
+}
+
+void QQuickWebEngineSettings::setDefaultFixedFontSize(int fontSize)
+{
+    const int oldDefaultFixedFontSize = d_ptr->fontSize(WebEngineSettings::DefaultFixedFontSize);
+    d_ptr->setFontSize(WebEngineSettings::DefaultFixedFontSize, fontSize);
+    if (oldDefaultFixedFontSize != fontSize)
+        Q_EMIT defaultFixedFontSizeChanged();
+}
+
 void QQuickWebEngineSettings::setParentSettings(QQuickWebEngineSettings *parentSettings)
 {
     d_ptr->setParentSettings(parentSettings->d_ptr.data());
diff --git a/src/webengine/api/qquickwebenginesettings_p.h b/src/webengine/api/qquickwebenginesettings_p.h
index 26776794..bd0c8e1d 100644
--- a/src/webengine/api/qquickwebenginesettings_p.h
+++ b/src/webengine/api/qquickwebenginesettings_p.h
@@ -92,6 +92,12 @@ class Q_WEBENGINE_PRIVATE_EXPORT QQuickWebEngineSettings : public QObject {
     Q_PROPERTY(bool playbackRequiresUserGesture READ playbackRequiresUserGesture WRITE setPlaybackRequiresUserGesture NOTIFY playbackRequiresUserGestureChanged REVISION 6 FINAL)
     Q_PROPERTY(bool webRTCPublicInterfacesOnly READ webRTCPublicInterfacesOnly WRITE setWebRTCPublicInterfacesOnly NOTIFY webRTCPublicInterfacesOnlyChanged REVISION 6 FINAL)
     Q_PROPERTY(bool javascriptCanPaste READ javascriptCanPaste WRITE setJavascriptCanPaste NOTIFY javascriptCanPasteChanged REVISION 6 FINAL)
+    Q_PROPERTY(QString standardFontFamily READ standardFontFamily WRITE setStandardFontFamily NOTIFY standardFontFamilyChanged)
+    Q_PROPERTY(QString fixedFontFamily READ standardFontFamily WRITE setFixedFontFamily NOTIFY fixedFontFamilyChanged)
+    Q_PROPERTY(QString serifFontFamily READ standardFontFamily WRITE setSerifFontFamily NOTIFY serifFontFamilyChanged)
+    Q_PROPERTY(QString cursiveFontFamily READ standardFontFamily WRITE setCursiveFontFamily NOTIFY cursiveFontFamilyChanged)
+    Q_PROPERTY(int defaultFontSize READ defaultFontSize WRITE setDefaultFontSize NOTIFY defaultFontSizeChanged)
+    Q_PROPERTY(int defaultFixedFontSize READ defaultFixedFontSize WRITE setDefaultFixedFontSize NOTIFY defaultFixedFontSizeChanged)
 
 public:
     enum UnknownUrlSchemePolicy {
@@ -133,6 +139,12 @@ public:
     bool playbackRequiresUserGesture() const;
     bool webRTCPublicInterfacesOnly() const;
     bool javascriptCanPaste() const;
+    QString standardFontFamily() const;
+    QString fixedFontFamily() const;
+    QString serifFontFamily() const;
+    QString cursiveFontFamily() const;
+    int defaultFontSize() const;
+    int defaultFixedFontSize() const;
 
     void setAutoLoadImages(bool on);
     void setJavascriptEnabled(bool on);
@@ -163,6 +175,12 @@ public:
     void setPlaybackRequiresUserGesture(bool on);
     void setWebRTCPublicInterfacesOnly(bool on);
     void setJavascriptCanPaste(bool on);
+    void setStandardFontFamily(QString fontFamily);
+    void setFixedFontFamily(QString fontFamily);
+    void setSerifFontFamily(QString fontFamily);
+    void setCursiveFontFamily(QString fontFamily);
+    void setDefaultFontSize(int fontSize);
+    void setDefaultFixedFontSize(int fontSize);
 
 signals:
     void autoLoadImagesChanged();
@@ -194,6 +212,12 @@ signals:
     Q_REVISION(6) void playbackRequiresUserGestureChanged();
     Q_REVISION(6) void webRTCPublicInterfacesOnlyChanged();
     Q_REVISION(6) void javascriptCanPasteChanged();
+    void standardFontFamilyChanged();
+    void fixedFontFamilyChanged();
+    void serifFontFamilyChanged();
+    void cursiveFontFamilyChanged();
+    void defaultFontSizeChanged();
+    void defaultFixedFontSizeChanged();
 
 private:
     explicit QQuickWebEngineSettings(QQuickWebEngineSettings *parentSettings = 0);
