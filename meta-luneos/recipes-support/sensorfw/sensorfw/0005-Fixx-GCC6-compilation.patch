From 9fa93f1a325e08aa18244b62403d031db18311fc Mon Sep 17 00:00:00 2001
From: Stefano Garzarella <s.garzarella@evidence.eu.com>
Date: Fri, 22 Jul 2016 14:42:34 +0200
Subject: [PATCH] [compilation] Fix compilation on glibc 2.23/gcc 6.1.1

---
 core/sensormanager.cpp         | 2 +-
 tests/client/clientapitest.cpp | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/core/sensormanager.cpp b/core/sensormanager.cpp
index 73e778c..2ac7d80 100644
--- a/core/sensormanager.cpp
+++ b/core/sensormanager.cpp
@@ -479,7 +479,7 @@ DeviceAdaptor* SensorManager::requestDeviceAdaptor(const QString& id)
     if( id.contains(';') ) // no parameter passing in release
     {
         setError( SmIdNotRegistered, QString(tr("unknown adaptor id '%1'").arg(id)) );
-        return false;
+        return NULL;
     }
 
     DeviceAdaptor* da = NULL;
diff --git a/tests/client/clientapitest.cpp b/tests/client/clientapitest.cpp
index 474a034..bf2e88e 100644
--- a/tests/client/clientapitest.cpp
+++ b/tests/client/clientapitest.cpp
@@ -829,10 +829,10 @@ void ClientApiTest::testDownsampling()
         // error less than 30% of total range is accepted
         float limitF = 0.3f;
 
-        QVERIFY2((float)abs(x1 - x2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)abs(x1 - x2) / rangeLimit, "<", limitF ));
-        QVERIFY2((float)abs(y1 - y2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)abs(y1 - y2) / rangeLimit,"<", limitF ));
-        QVERIFY2((float)abs(rx1 - rx2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)abs(rx1 - rx2) / rangeLimit,"<", limitF ));
-        QVERIFY2((float)abs(ry1 - ry2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)abs(ry1 - ry2) / rangeLimit,"<", limitF ));
+        QVERIFY2((float)fabsf(x1 - x2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)fabsf(x1 - x2) / rangeLimit, "<", limitF ));
+        QVERIFY2((float)fabsf(y1 - y2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)fabsf(y1 - y2) / rangeLimit,"<", limitF ));
+        QVERIFY2((float)fabsf(rx1 - rx2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)fabsf(rx1 - rx2) / rangeLimit,"<", limitF ));
+        QVERIFY2((float)fabsf(ry1 - ry2) / rangeLimit < limitF, errorMessage(sensorName, interval, (float)fabsf(ry1 - ry2) / rangeLimit,"<", limitF ));
     }
 }
 
--
libgit2 0.24.0
