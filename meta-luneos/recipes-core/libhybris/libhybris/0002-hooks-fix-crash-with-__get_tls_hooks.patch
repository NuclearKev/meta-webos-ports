From 9f1d3ab31022532a30f62ce5c2b40852ebeee78f Mon Sep 17 00:00:00 2001
From: Christophe Chapuis <chris.chapuis@gmail.com>
Date: Thu, 16 Feb 2017 19:14:20 +0000
Subject: [PATCH 2/2] hooks: fix crash with __get_tls_hooks

When the two other "buf" TLS variables are defined, the
tls_hooks variable is offsetted to an area after these two.
But when the __get_tls_hooks function is called, it looks
like this offset isn't correct, leading to a crash when
the caller uses the returned pointer.

Hopefully, "buf" variables heree don't need to be TLS, so
that fixes the issue.

There is still a mystery as to why the offset is wrong at runtime.

Signed-off-by: Christophe Chapuis <chris.chapuis@gmail.com>
---
 hybris/common/hooks.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/hybris/common/hooks.c b/hybris/common/hooks.c
index 4c119ec..8a9cb2a 100644
--- a/hybris/common/hooks.c
+++ b/hybris/common/hooks.c
@@ -2165,7 +2165,7 @@ int _hybris_hook_prctl(int option, unsigned long arg2, unsigned long arg3,
 
 static char* _hybris_hook_basename(const char *path)
 {
-    static __thread char buf[PATH_MAX];
+    char buf[PATH_MAX];
 
     TRACE_HOOK("path '%s'", path);
 
@@ -2181,7 +2181,7 @@ static char* _hybris_hook_basename(const char *path)
 
 static char* _hybris_hook_dirname(char *path)
 {
-    static __thread char buf[PATH_MAX];
+    char buf[PATH_MAX];
 
     TRACE_HOOK("path '%s'", path);
 
-- 
2.7.4

