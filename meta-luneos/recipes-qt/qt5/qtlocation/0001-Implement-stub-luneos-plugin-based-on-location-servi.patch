From 884679ff620dca5365d9859fb10d2b2ce17d45d1 Mon Sep 17 00:00:00 2001
From: Nikolay Nizov <nizovn@gmail.com>
Date: Sun, 8 Nov 2015 21:15:54 +0300
Subject: [PATCH] Implement stub luneos plugin based on location service

Only wifi based location is supported.
Signed-off-by: Nikolay Nizov <nizovn@gmail.com>

---
 src/plugins/position/luneos/luneos.pro             |  24 ++
 src/plugins/position/luneos/plugin.json            |   8 +
 .../luneos/qgeopositioninfosource_luneos.cpp       | 263 +++++++++++++++++++++
 .../luneos/qgeopositioninfosource_luneos_p.h       |  82 +++++++
 .../qgeopositioninfosourcefactory_luneos.cpp       |  54 +++++
 .../luneos/qgeopositioninfosourcefactory_luneos.h  |  56 +++++
 src/plugins/position/position.pro                  |   1 +
 7 files changed, 488 insertions(+)
 create mode 100644 src/plugins/position/luneos/luneos.pro
 create mode 100644 src/plugins/position/luneos/plugin.json
 create mode 100644 src/plugins/position/luneos/qgeopositioninfosource_luneos.cpp
 create mode 100644 src/plugins/position/luneos/qgeopositioninfosource_luneos_p.h
 create mode 100644 src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.cpp
 create mode 100644 src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.h

diff --git a/src/plugins/position/luneos/luneos.pro b/src/plugins/position/luneos/luneos.pro
new file mode 100644
index 00000000..3d6bfaf3
--- /dev/null
+++ b/src/plugins/position/luneos/luneos.pro
@@ -0,0 +1,24 @@
+TARGET = qtposition_luneos
+QT = core positioning
+
+PLUGIN_TYPE = position
+PLUGIN_CLASS_NAME = QGeoPositionInfoSourceFactoryLuneOS
+load(qt_plugin)
+
+HEADERS += \
+    qgeopositioninfosource_luneos_p.h \
+    qgeopositioninfosourcefactory_luneos.h
+
+SOURCES += \
+    qgeopositioninfosource_luneos.cpp \
+    qgeopositioninfosourcefactory_luneos.cpp
+
+CONFIG += link_pkgconfig
+PKGCONFIG += luna-service2
+PKGCONFIG += glib-2.0
+
+CONFIG += exceptions
+CONFIG += no_keywords
+LIBS += -lluna-service2++
+
+OTHER_FILES += plugin.json
diff --git a/src/plugins/position/luneos/plugin.json b/src/plugins/position/luneos/plugin.json
new file mode 100644
index 00000000..badcc25a
--- /dev/null
+++ b/src/plugins/position/luneos/plugin.json
@@ -0,0 +1,8 @@
+{
+    "Keys": ["luneos"],
+    "Provider": "luneos",
+    "Position": true,
+    "Satellite": false,
+    "Monitor" : false,
+    "Priority": 1000
+}
diff --git a/src/plugins/position/luneos/qgeopositioninfosource_luneos.cpp b/src/plugins/position/luneos/qgeopositioninfosource_luneos.cpp
new file mode 100644
index 00000000..934368a1
--- /dev/null
+++ b/src/plugins/position/luneos/qgeopositioninfosource_luneos.cpp
@@ -0,0 +1,263 @@
+/****************************************************************************
+**
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
+** Copyright (C) 2015 Nikolay Nizov <nizovn@gmail.com>
+**
+** This file is part of the QtPositioning module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL21$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qgeopositioninfosource_luneos_p.h"
+
+#include <QtCore/QDateTime>
+#include <QJsonValue>
+#include <QJsonArray>
+#include <QJsonObject>
+#include <QJsonDocument>
+
+#include <QCoreApplication>
+#include <QDebug>
+#include <glib.h>
+
+#define MINIMUM_UPDATE_INTERVAL 1000
+
+//#define Q_LOCATION_LUNEOS_DEBUG 1
+
+QGeoPositionInfoSourceLuneOS::QGeoPositionInfoSourceLuneOS(QObject *parent)
+:   QGeoPositionInfoSource(parent), m_running(false)
+{
+
+    try {
+        QString serviceName("qtpositioning_");
+        serviceName += QCoreApplication::applicationName();
+        mHandle = LS::registerService(serviceName.toUtf8().constData());
+        mHandle.attachToLoop(g_main_context_default());
+    }
+    catch (LS::Error &error) {
+        qWarning("Failed to register service handle: %s", error.what());
+        m_error = UnknownSourceError;
+        Q_EMIT QGeoPositionInfoSource::error(m_error);
+    }
+
+    m_requestTimer.setSingleShot(true);
+    QObject::connect(&m_requestTimer, SIGNAL(timeout()), this, SLOT(requestTimeout()));
+
+    setPreferredPositioningMethods(AllPositioningMethods);
+}
+
+QGeoPositionInfoSourceLuneOS::~QGeoPositionInfoSourceLuneOS()
+{
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+    qDebug() << Q_FUNC_INFO;
+#endif
+    mTrackingCall.cancel();
+    mRequestCall.cancel();
+}
+
+void QGeoPositionInfoSourceLuneOS::setUpdateInterval(int msec)
+{
+    QGeoPositionInfoSource::setUpdateInterval(qMax(minimumUpdateInterval(), msec));
+}
+
+void QGeoPositionInfoSourceLuneOS::setPreferredPositioningMethods(PositioningMethods methods)
+{
+    Q_UNUSED(methods);
+
+    PositioningMethods previousPreferredPositioningMethods = preferredPositioningMethods();
+    if (previousPreferredPositioningMethods == preferredPositioningMethods())
+        return;
+
+    QGeoPositionInfoSource::setPreferredPositioningMethods(supportedPositioningMethods());
+}
+
+QGeoPositionInfo QGeoPositionInfoSourceLuneOS::lastKnownPosition(bool fromSatellitePositioningMethodsOnly) const
+{
+    if (fromSatellitePositioningMethodsOnly) {
+            return QGeoPositionInfo();
+    }
+    return m_lastPosition;
+}
+
+QGeoPositionInfoSourceLuneOS::PositioningMethods QGeoPositionInfoSourceLuneOS::supportedPositioningMethods() const
+{
+    return NonSatellitePositioningMethods;
+}
+
+void QGeoPositionInfoSourceLuneOS::startUpdates()
+{
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+    qDebug() << Q_FUNC_INFO;
+#endif
+    if (m_running) {
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+        qDebug() << "QGeoPositionInfoSourceLuneOS already running";
+#endif
+        return;
+    }
+
+    m_running = true;
+
+    QJsonObject request;
+    request.insert("subscribe", true);
+    QString payload = QJsonDocument(request).toJson();
+
+    try {
+        mTrackingCall = mHandle.callMultiReply("luna://org.webosports.location/startTracking",
+                                           payload.toUtf8().constData());
+        mTrackingCall.continueWith(cbProcessResults, this);
+    }
+    catch (LS::Error &error) {
+        qWarning("Failed to startTracking: %s", error.what());
+        m_error = UnknownSourceError;
+        Q_EMIT QGeoPositionInfoSource::error(m_error);
+    }
+
+    // Emit last known position on start
+    if (m_lastPosition.isValid()) {
+        QMetaObject::invokeMethod(this, "positionUpdated", Qt::QueuedConnection,
+                                  Q_ARG(QGeoPositionInfo, m_lastPosition));
+    }
+}
+
+int QGeoPositionInfoSourceLuneOS::minimumUpdateInterval() const
+{
+    return MINIMUM_UPDATE_INTERVAL;
+}
+
+void QGeoPositionInfoSourceLuneOS::stopUpdates()
+{
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+    qDebug() << Q_FUNC_INFO;
+#endif
+
+    mTrackingCall.cancel();
+    mRequestCall.cancel();
+    m_running = false;
+
+    if (m_requestTimer.isActive())
+        m_requestTimer.stop();
+}
+
+void QGeoPositionInfoSourceLuneOS::requestUpdate(int timeout)
+{
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+    qDebug() << Q_FUNC_INFO;
+#endif
+
+    if (timeout < minimumUpdateInterval() && timeout != 0) {
+        Q_EMIT updateTimeout();
+        return;
+    }
+
+    if (m_requestTimer.isActive()) {
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+        qDebug() << "QGeoPositionInfoSourceLuneOS request timer was active, ignoring requestUpdate.";
+#endif
+        return;
+    }
+
+    timeout = timeout? : MINIMUM_UPDATE_INTERVAL;
+    m_requestTimer.start(timeout);
+
+    try {
+        mRequestCall = mHandle.callOneReply("luna://org.webosports.location/getCurrentPosition", "{}");
+
+        mRequestCall.continueWith(cbProcessResults, this);
+        mRequestCall.setTimeout(timeout);
+    }
+    catch (LS::Error &error) {
+        qWarning("Failed to getCurrentPosition: %s", error.what());
+        m_error = UnknownSourceError;
+        Q_EMIT QGeoPositionInfoSource::error(m_error);
+    }
+}
+
+void QGeoPositionInfoSourceLuneOS::requestTimeout()
+{
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+    qDebug() << "QGeoPositionInfoSourceLuneOS requestUpdate timeout occurred.";
+#endif
+
+    Q_EMIT updateTimeout();
+}
+
+QGeoPositionInfoSource::Error QGeoPositionInfoSourceLuneOS::error() const
+{
+    return m_error;
+}
+
+bool QGeoPositionInfoSourceLuneOS::cbProcessResults(LSHandle *handle, LSMessage *message, void *context)
+{
+    Q_UNUSED(handle);
+
+#ifdef Q_LOCATION_LUNEOS_DEBUG
+    qDebug() << Q_FUNC_INFO << LSMessageGetPayload(message);
+#endif
+    QGeoPositionInfoSourceLuneOS *instance = static_cast<QGeoPositionInfoSourceLuneOS*>(context);
+
+    QJsonObject response = QJsonDocument::fromJson(LSMessageGetPayload(message)).object();
+
+    bool success = response.value("returnValue").toBool();
+    if (!success) {
+        instance->m_error = UnknownSourceError;
+        Q_EMIT instance->QGeoPositionInfoSource::error(instance->m_error);
+        return true;
+    }
+
+    double latitude = response.value("latitude").toDouble(qQNaN());
+    double longitude = response.value("longitude").toDouble(qQNaN());
+    double altitude = response.value("altitude").toDouble(qQNaN());
+    int timestamp = response.value("timestamp").toInt(QDateTime::currentMSecsSinceEpoch());
+    QDateTime qtimestamp;
+    qtimestamp.setTime_t(timestamp);
+
+    QGeoPositionInfo position = QGeoPositionInfo(QGeoCoordinate(latitude, longitude, altitude), qtimestamp);
+
+    double horizontalAccuracy = response.value("horizAccuracy").toDouble(qQNaN());
+    double verticalAccuracy = response.value("vertAccuracy").toDouble(qQNaN());
+    double velocity = response.value("velocity").toDouble(qQNaN());
+    double direction = response.value("heading").toDouble(qQNaN());
+
+    if (!qIsNaN(horizontalAccuracy) && horizontalAccuracy != -1)
+        position.setAttribute(QGeoPositionInfo::HorizontalAccuracy, horizontalAccuracy);
+    if (!qIsNaN(verticalAccuracy) && verticalAccuracy != -1)
+        position.setAttribute(QGeoPositionInfo::VerticalAccuracy, verticalAccuracy);
+    if (!qIsNaN(velocity) && velocity != -1)
+        position.setAttribute(QGeoPositionInfo::GroundSpeed, velocity);
+    if (!qIsNaN(direction) && direction != -1)
+        position.setAttribute(QGeoPositionInfo::Direction, direction);
+
+    if (position.isValid()) {
+        instance->m_lastPosition = position;
+        Q_EMIT instance->positionUpdated(position);
+    }
+
+    return true;
+}
+
+//QT_END_NAMESPACE
diff --git a/src/plugins/position/luneos/qgeopositioninfosource_luneos_p.h b/src/plugins/position/luneos/qgeopositioninfosource_luneos_p.h
new file mode 100644
index 00000000..4be8b09a
--- /dev/null
+++ b/src/plugins/position/luneos/qgeopositioninfosource_luneos_p.h
@@ -0,0 +1,82 @@
+/****************************************************************************
+**
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
+** Copyright (C) 2015 Nikolay Nizov <nizovn@gmail.com>
+**
+** This file is part of the QtPositioning module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL21$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QGEOPOSITIONINFOSOURCE_LUNEOS_P_H
+#define QGEOPOSITIONINFOSOURCE_LUNEOS_P_H
+
+#include <QGeoPositionInfoSource>
+#include <QTimer>
+
+#include <luna-service2++/handle.hpp>
+#include <luna-service2++/call.hpp>
+
+class QGeoPositionInfoSourceLuneOS: public QGeoPositionInfoSource
+{
+
+    Q_OBJECT
+
+public:
+    QGeoPositionInfoSourceLuneOS(QObject *parent = 0);
+    ~QGeoPositionInfoSourceLuneOS();
+
+    // From QGeoPositionInfoSource
+    void setUpdateInterval(int msec);
+    QGeoPositionInfo lastKnownPosition(bool fromSatellitePositioningMethodsOnly = false) const;
+    PositioningMethods supportedPositioningMethods() const;
+    void setPreferredPositioningMethods(PositioningMethods methods);
+    int minimumUpdateInterval() const;
+    Error error() const;
+
+public Q_SLOTS:
+    virtual void startUpdates();
+    virtual void stopUpdates();
+
+    virtual void requestUpdate(int timeout = 0);
+
+private Q_SLOTS:
+    void requestTimeout();
+
+private:
+    static bool cbProcessResults(LSHandle *handle, LSMessage *message, void *context);
+
+    bool m_running;
+    Error m_error;
+    QTimer m_requestTimer;
+    QGeoPositionInfo m_lastPosition;
+    LS::Call mTrackingCall;
+    LS::Call mRequestCall;
+    LS::Handle mHandle;
+};
+
+#endif // QGEOPOSITIONINFOSOURCE_LUNEOS_P_H
diff --git a/src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.cpp b/src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.cpp
new file mode 100644
index 00000000..5a2af302
--- /dev/null
+++ b/src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.cpp
@@ -0,0 +1,54 @@
+/****************************************************************************
+**
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
+** Copyright (C) 2015 Nikolay Nizov <nizovn@gmail.com>
+**
+** This file is part of the QtPositioning module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL21$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qgeopositioninfosourcefactory_luneos.h"
+#include "qgeopositioninfosource_luneos_p.h"
+
+QGeoPositionInfoSource *QGeoPositionInfoSourceFactoryLuneOS::positionInfoSource(QObject *parent)
+{
+    QGeoPositionInfoSourceLuneOS *src = new QGeoPositionInfoSourceLuneOS(parent);
+    return src;
+}
+
+QGeoSatelliteInfoSource *QGeoPositionInfoSourceFactoryLuneOS::satelliteInfoSource(QObject *parent)
+{
+    Q_UNUSED(parent);
+    return 0;
+}
+
+QGeoAreaMonitorSource *QGeoPositionInfoSourceFactoryLuneOS::areaMonitor(QObject *parent)
+{
+    Q_UNUSED(parent);
+    return 0;
+}
diff --git a/src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.h b/src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.h
new file mode 100644
index 00000000..7b5497a1
--- /dev/null
+++ b/src/plugins/position/luneos/qgeopositioninfosourcefactory_luneos.h
@@ -0,0 +1,56 @@
+/****************************************************************************
+**
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
+** Copyright (C) 2015 Nikolay Nizov <nizovn@gmail.com>
+**
+** This file is part of the QtPositioning module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL21$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QGEOPOSITIONINFOSOURCEFACTORY_LUNEOS_H
+#define QGEOPOSITIONINFOSOURCEFACTORY_LUNEOS_H
+
+#include <QObject>
+#include <QGeoPositionInfoSourceFactory>
+
+class QGeoPositionInfoSourceFactoryLuneOS: public QObject, public QGeoPositionInfoSourceFactory
+{
+    Q_OBJECT
+
+    Q_PLUGIN_METADATA(IID "org.qt-project.qt.position.sourcefactory/5.0"
+                      FILE "plugin.json")
+
+    Q_INTERFACES(QGeoPositionInfoSourceFactory)
+
+public:
+    QGeoPositionInfoSource *positionInfoSource(QObject *parent);
+    QGeoSatelliteInfoSource *satelliteInfoSource(QObject *parent);
+    QGeoAreaMonitorSource *areaMonitor(QObject *parent);
+};
+
+#endif // QGEOPOSITIONINFOSOURCEFACTORY_LUNEOS_H
diff --git a/src/plugins/position/position.pro b/src/plugins/position/position.pro
index 1687a9d2..a6d9f734 100644
--- a/src/plugins/position/position.pro
+++ b/src/plugins/position/position.pro
@@ -9,6 +9,7 @@ qtHaveModule(simulator):SUBDIRS += simulator
 osx|ios|tvos:SUBDIRS += corelocation
 android:SUBDIRS += android
 win32:qtHaveModule(serialport):SUBDIRS += serialnmea
+luneos:SUBDIRS += luneos
 
 SUBDIRS += \
     positionpoll
